// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
    directUrl = env("DIRECT_URL")
}

model User {
    id       String @id @default(cuid())
    email    String @unique
    password String

    invoices  Invoice[]
    purchases Purchase[]
    contacts  Contact[]
    products  Product[]

    profile Profile?
}

model Contact {
    id       Int       @id @default(autoincrement())
    name     String
    address  String
    imageUrl String?   @default("")
    email    String?
    isActive Boolean   @default(false)
    userId   String
    user     User      @relation(fields: [userId], references: [id])
    Product  Product[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([name])
}

model Profile {
    id            Int              @id @default(autoincrement())
    user          User             @relation(fields: [userId], references: [id])
    userId        String           @unique
    name          String
    address       String?
    subscribePlan SubscriptionPlan @default(FREE)
}

model Invoice {
    id               Int                @id @default(autoincrement())
    invoiceNumber    String
    customerId       String
    description      String?
    userId           String
    total            Float
    tax              Float
    user             User               @relation(fields: [userId], references: [id])
    status           Status             @default(UNPAID)
    invoiceLineItems InvoiceLineItems[]
    createdAt        DateTime           @default(now())
    updatedAt        DateTime           @updatedAt
}

model InvoiceLineItems {
    id        Int      @id @default(autoincrement())
    productId Int
    qty       Int
    price     Int
    total     Int
    Invoice   Invoice? @relation(fields: [invoiceId], references: [id], onDelete: Cascade)
    invoiceId Int?
}

model Purchase {
    id        Int      @id @default(autoincrement())
    userId    String
    user      User     @relation(fields: [userId], references: [id])
    status    Status   @default(UNPAID)
    total     Float
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Product {
    id          Int     @id @default(autoincrement())
    name        String
    stock       Int
    price       Float
    imageUrl    String?
    status      Boolean @default(false)
    badge       String?
    description String

    userId String
    user   User   @relation(fields: [userId], references: [id])

    contactId Int
    contact   Contact @relation(fields: [contactId], references: [id], onDelete: Cascade)

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([name])
}

enum Status {
    PAID
    UNPAID
}

enum SubscriptionPlan {
    FREE
    BASIC
    PREMIUM
    ENTERPRISE
}
